.first-face{
  display: flex;
  justify-content: center;
  align-items: center;
}

.second-face{
   display: flex;
   justify-content: space-between;

}
.second-face .pip:nth-of-type(2){
  align-self: flex-end;    //align-self的场景是作用在项目(控件)上,当单个项目有与其他项目不一样的对齐方式，这时候align-self就能上场了
}

.third-face{
  display: flex;
}
.third-face .pip:nth-of-type(2){
  align-self: center;
}
.third-face .pip:nth-of-type(3){
  align-self: flex-end;
}

.fourth-face{
  display: flex;
  justify-content: space-between;
}
.fourth-face .column{
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.fifth-face{
  display: flex;
}
.fifth-face .column{
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.fifth-face .column:nth-of-type(2){
   justify-content: center;
  // 为什么这里不能拿到第二个column的pip，对其设置align-self：center，因为align-self是用来覆盖align-items的属性值，而align-items是用来设置交叉轴对齐方式的，而这里是要设置主轴的对齐方式
  //align-self: content;
}


.sixth-face{
  display: flex;
  justify-content: space-between;
}
.sixth-face .column{
  display: flex;
  flex-direction: column;
}



.pip{
  //块内元素，元素左右带换行符
  display: block;
  width: 24px;
  height: 24px;
  margin: 4px;
  background-color: #3e3e3e;

  border-radius: 50%;
  box-shadow: inset 0 3px #111, inset 0 -3px #555;
}
html,body{
  height: 100%;
}
body{
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: 'Open Sans',sans-serif;
  flex-wrap: wrap;

  align-content:center;
}
*{
  box-sizing: border-box;
}
[class$="face"]{
  margin: 6px;
  padding: 4px;

  height: 104px;
  width: 104px;
  background-color: #e7e7e7;
  object-fit: contain;

  box-shadow:
    inset 0 5px white,
    inset 0 -5px #bbb,
    inset 5px 0 #d7d7d7,
    inset -5px 0 #d7d7d7;

  border-radius: 10%;
}



